{
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "DefaultConnection": "Server=localhost;Initial Catalog=mytable;MultipleActiveResultSets=true;User ID=sa;Password=mypass"

  }
}


//Domain Driver Design é uma modelagem de Software, que ajuda a orquestrar  um conjunto de praticas e padrões com o objetivo implementar um projeto mais claro, organizado, modulavel.Cada dominio com a sua responsabilidade, separar regras do processo de negócio, tornando um projeto mais entendivel e de facil manutenção.






//Microservices é uma arquitetura de criação de software, são micro programas que não possui dependencia com outros programas ou fatores, ele só possui uma unica responsabilidade  com o foco de grandes entregas de processamento de dados, quando o mesmo passa a ter mais que uma responsabilidade e ganha dependencias, logo deixa de ser um microservices gerando grandes problemas para o processo em si.
//Ele possui um grande poder de escalabilidade se implementado da forma correta, o seu processo passa a ser vantajoso quando na entrega de sua unica responsabilidade, caso aconteça algum problema com o microservices a operação não irá parar 100% não deverá impactar nos outros demais serviços, somente uma parte, uma responsabilidade ficará inativo até surgir o reparo.  Mais fácil de aplicar manutenções e identificar problemas sem interferir nos outros produtos.
//É uma arquitetura complexa de inplementetar, deve ser bem pensada antes de aplicar no seu produto, está arquitetura deve ser implementada de uma forma que os processos se comunique sem ser aplicado dependencias no microservices distinto. É focado em escalabilidade é entregas continuas, mas deve haver uma preocupação ao desenvolver uma aplicação distribuida, quando a IDE não da suporte para isso, e sim para aplicações monoliticas. 